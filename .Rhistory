"AlenkaCapital", "BCAA", "Bull", "Journal_SL") )
faces<-dplyr::filter(a1, nik%in% c("georgv_iis_h2t", "dr-mart_sl", "ZloyGeniy",
"ШадринИнвест", "Endeavour", "my-trade.pro",
"Alenka Capital", "BCAA", "Bull", "Journal_SL") )
View(faces)
faces<-dplyr::filter(a1, nik%in% c("georgv_iis_h2t", "dr-mart_sl", "ZloyGeniy",
"ШадринИнвест", "Endeavour", "my-trade.pro",
"Alenka Capital", "BCAA", "Bull", "Journal_SL"), dohod!=0 )
summary(faces)
aplpack::faces(faces)
View(faces)
aplpack::faces(faces[,c(8:11,13])
aplpack::faces(faces[,c(8:11,13)])
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik, ncolors=20)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik, ncolors=5)
rainbow(5)
rainbow(1)
rainbow(2)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik, ncolors=2)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik, ncolors=3)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,fill=TRUE)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,fill=TRUE)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,face.type=0)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,face.type=0)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,face.type=0,scale=FALSE)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,face.type=0,fill=TRUE,scale=FALSE)
aplpack::faces(faces[,c(8:11,13)], labels=faces$nik,face.type=0,byrow = TRUE)
aplpack::faces(faces[,c(8:11,13)], face.type=0,byrow = TRUE)
aplpack::faces(faces[,c(8:11,13)], face.type=0)
aplpack::faces(faces[,c(8:11,13)], face.type=1)
aplpack::faces(faces[,c(8:11,13)], face.type=1, scale=FALSE)
aplpack::faces(faces[,c(8:11,13)], face.type=2)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik,fill=FALSE)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik,fill=TRUE)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik,fill=TRUE,ncolors=1)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik,fill=FALSE,ncolors=1)
aplpack::faces(faces[,c(8:11,13)], face.type=1,labels=faces$nik,fill=FALSE,ncolors=1)
aplpack::faces(faces[,c(8:11,13)], face.type=1,labels=faces$nik,fill=FALSE,ncolors=0)
aplpack::faces(faces[,c(8:11,13)], face.type=2,labels=faces$nik,fill=FALSE,ncolors=0)
aplpack::faces(faces[,c(8:11,13)], face.type=1,labels=faces$nik,fill=FALSE,ncolors=0)
aplpack::faces(faces[,c(8:11,13)], face.type=0,labels=faces$nik)
?faces2
library("TeachingDemos", lib.loc="~/R/win-library/3.1")
faces(faces[,c(8:11,13)], face.type=0,labels=faces$nik)
faces(faces[,c(8:11,13)], abels=faces$nik)
faces(faces[,c(8:11,13)], labels=faces$nik)
faces(faces[,c(8:11,13)], labels=faces$nik,scale=FALSE)
faces(faces[,c(8:11,13)], labels=faces$nik)
faces2(faces[,c(8:11,13)], labels=faces$nik)
mat<-faces[,c(8:11,13)
mat<-faces[,c(8:11,13)]
mat<-faces[,c(8:11,13)]
View(mat)
mat<-faces[,c(4,8:11,13)]
View(mat)
faces2(mat[,-1], labels=faces$nik)
ncol(mat)
ncol(mat[,-1])
faces2(mat[,-1], labels=faces$nik,fill=5:10)
faces2(mat[,-1], labels=faces$nik,fill=6:10)
faces2(mat[,-1], labels=faces$nik,fill=11:15)
faces2(mat[,-1], labels=faces$nik,which=11:15)
faces2(mat[,-1], labels=faces$nik)
faces2(mat[,-1], labels=faces$nik, scale="columns")
faces2(mat[,-1], labels=faces$nik, scale="all")
faces2(mat[,-1], labels=faces$nik, scale="center")
faces2(mat[,-1], labels=faces$nik, scale="columns")
faces2(mat[,-1], labels=faces$nik, scale="none")
faces2(mat[,-1], labels=faces$nik, which=6:10)
View(mat)
faces2(mat[,-1], labels=faces$nik, which=8)
faces2(mat[,-1], labels=faces$nik, which=8:12)
View(mat)
faces2(mat[,-1], labels=faces$nik, which=6:10)
faces(mat[,-1], labels=faces$nik)
faces(mat[,-1], labels=faces$nik)
mat<-select(mat,dohod_rub,count_deal,vol_rub,dohod,amount)
faces(mat[,-1], labels=faces$nik)
View(mat)
mat<-faces[,c(4,8:11,13)]
mat<-select(mat,nik,dohod_rub,count_deal,vol_rub,dohod,amount)
View(mat)
faces(mat[,-1], labels=faces$nik)
faces(mat[,-1], labels=faces$nik,scale=FALSE)
faces(mat[,-1], labels=faces$nik)
faces(mat, labels=faces$nik)
aplpack::faces(faces[,c(8:11,13)], face.type=0,labels=faces$nik)
mat<-select(mat,dohod_rub,count_deal,vol_rub,dohod,amount)
row.names(mat)<-faces$nik
faces(mat, labels=paste(faces$nik,faces$contype_name)
)
View(mat)
View(mat)
row.names(mat)<-faces$nik
faces(mat, labels=paste(faces$nik,faces$contype_name))
row.names(mat)<-paste(faces$nik,faces$contype_name)
faces(mat)
mat
faces(mat)
faces2(mat)
aplpack<-faces(mat, labels=paste(faces$nik,faces$contype_name))
aplpack::faces(mat)
??box
install.packages("plotly")
download.file("ftp://ftp.moex.com/pub/info/stats_contest/2015/result_day.csv",
"resultday.csv")
a1<-read.table("resultday.csv"
,quote=""
, header=TRUE
, sep=";", dec=".",
as.is=TRUE,
skipNul=TRUE,
# fileEncoding = "CP1251"
)
a1 %>% select(trader_id,contype_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
decl2<-filter(a2, trader_id==47916)
p<-ggplot(data=a2,aes(x = amount/1000, y=dohod_rub/1000))+
#  ggtitle("Доход до 1 млн.грн.")+
ylab("Доход, тыс.руб.")+
xlab("Старт.активы, тыс.руб.")+
#  xlim(0,100000)+
# ylim(0,1000)+
# geom_smooth()+
geom_rug()+
facet_wrap(~contype_name,scales = "free")+
geom_point()+
geom_point(data = decl2,colour = 'red', size = 3)
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("plotly", lib.loc="~/R/win-library/3.1")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.1")
remove.packages("ggplot2", lib="~/R/win-library/3.1")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
detach("package:ggplot2", unload=TRUE)
library("scales", lib.loc="~/R/win-library/3.1")
remove.packages("scales", lib="~/R/win-library/3.1")
install.packages("scales")
library("scales", lib.loc="~/R/win-library/3.1")
detach("package:scales", unload=TRUE)
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("scales", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("MASS", lib.loc="~/R/win-library/3.1")
remove.packages("MASS", lib="~/R/win-library/3.1")
install.packages("MASS")
library("MASS", lib.loc="~/R/win-library/3.1")
detach("package:MASS", unload=TRUE)
library("MASS", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
decl2<-filter(a2, trader_id==47916)
download.file("ftp://ftp.moex.com/pub/info/stats_contest/2015/result_day.csv",
"resultday.csv")
a1<-read.table("resultday.csv"
,quote=""
, header=TRUE
, sep=";", dec=".",
as.is=TRUE,
skipNul=TRUE,
# fileEncoding = "CP1251"
)
a1 %>% select(trader_id,contype_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
library("dplyr", lib.loc="~/R/win-library/3.1")
a1 %>% select(trader_id,contype_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
decl2<-filter(a2, trader_id==47916)
p<-ggplot(data=a2,aes(x = amount/1000, y=dohod_rub/1000))+
#  ggtitle("Доход до 1 млн.грн.")+
ylab("Доход, тыс.руб.")+
xlab("Старт.активы, тыс.руб.")+
#  xlim(0,100000)+
# ylim(0,1000)+
# geom_smooth()+
geom_rug()+
facet_wrap(~contype_name,scales = "free")+
geom_point()+
geom_point(data = decl2,colour = 'red', size = 3)
p
library("plotly", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
remove.packages("httr", lib="~/R/win-library/3.1")
install.packages("httr")
library("httr", lib.loc="~/R/win-library/3.1")
detach("package:httr", unload=TRUE)
library("plotly", lib.loc="~/R/win-library/3.1")
detach("package:plotly", unload=TRUE)
library("jsonlite", lib.loc="~/R/win-library/3.1")
remove.packages("jsonlite", lib="~/R/win-library/3.1")
install.packages("jsonlite")
library("plotly", lib.loc="~/R/win-library/3.1")
download.file("ftp://ftp.moex.com/pub/info/stats_contest/2015/result_day.csv",
"resultday.csv")
a1<-read.table("resultday.csv"
,quote=""
, header=TRUE
, sep=";", dec=".",
as.is=TRUE,
skipNul=TRUE,
# fileEncoding = "CP1251"
)
a1 %>% select(trader_id,contype_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
library("dplyr", lib.loc="~/R/win-library/3.1")
a1 %>% select(trader_id,contype_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
decl2<-filter(a2, trader_id==47916)
p<-ggplot(data=a2,aes(x = amount/1000, y=dohod_rub/1000))+
#  ggtitle("Доход до 1 млн.грн.")+
ylab("Доход, тыс.руб.")+
xlab("Старт.активы, тыс.руб.")+
#  xlim(0,100000)+
# ylim(0,1000)+
# geom_smooth()+
geom_rug()+
facet_wrap(~contype_name,scales = "free")+
geom_point()+
geom_point(data = decl2,colour = 'red', size = 3)
p
ggplotly(p)
p<-ggplot(data=a2,aes(x = amount/1000, y=dohod_rub/1000))+
#  ggtitle("Доход до 1 млн.грн.")+
ylab("Доход, тыс.руб.")+
xlab("Старт.активы, тыс.руб.")+
#  xlim(0,100000)+
# ylim(0,1000)+
# geom_smooth()+
# geom_rug()+
facet_wrap(~contype_name,scales = "free")+
geom_point()+
geom_point(data = decl2,colour = 'red', size = 3)
p
ggplotly(p)
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada", name = "borders") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red",
alpha = 1/2, name = "cities")
ggplotly(viz)
library("quantmod", lib.loc="~/R/win-library/3.1")
remove.packages("quantmod", lib="~/R/win-library/3.1")
install.packages("quantmod")
library("quantmod", lib.loc="~/R/win-library/3.1")
detach("package:quantmod", unload=TRUE)
library("quantmod", lib.loc="~/R/win-library/3.1")
getSymbols("AAPL")
View(AAPL)
View(AAPL)
ggplot(AAPL,aes(row.names,AAPL.Open))+geom_line
library("ggplot2", lib.loc="~/R/win-library/3.1")
ggplot(AAPL,aes(row.names,AAPL.Open))+geom_line
ggplot(AAPL,aes(row.names,AAPL.Open))+geom_line()
View(AAPL)
apl<-as.data.frame(AAPL)
View(apl)
ggplot(apl,aes(row.names,AAPL.Open))+geom_line()
View(apl)
apl$date<-row.names(apl)
View(apl)
ggplot(apl,aes(date,AAPL.Open))+geom_line()
apl$date<-as.Date(row.names(apl))
ggplot(apl,aes(date,AAPL.Open))+geom_line()
library("rusquant", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
remove.packages("RCurl", lib="~/R/win-library/3.1")
install.packages("RCurl")
library("rusquant", lib.loc="~/R/win-library/3.1")
detach("package:rusquant", unload=TRUE)
library("XML", lib.loc="~/R/win-library/3.1")
remove.packages("XML", lib="~/R/win-library/3.1")
install.packages("XML")
library("rusquant", lib.loc="~/R/win-library/3.1")
if (!file.exists("resultday.csv"))
download.file("ftp://ftp.moex.com/pub/info/stats_contest/2015/result_day.csv",
"resultday.csv")
a1<-read.table("resultday.csv"
,quote=""
, header=TRUE
, sep=";", dec=".",
as.is=FALSE,
skipNul=TRUE,
# fileEncoding = "CP1251"
)
a1 %>% select(trader_id,contype_name,diler_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
library("dplyr", lib.loc="~/R/win-library/3.1")
a1 %>% select(trader_id,contype_name,diler_name,dohod_rub,amount) %>% filter (dohod_rub!=0) -> a2
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("plotly", lib.loc="~/R/win-library/3.1")
ggp<-(ggplot(a2, aes(dohod_rub,diler_name))+geom_point(size=0.1)+
facet_wrap(~contype_name, scale="free_x"))
ggp
ggp2<-plotly(ggp)
plotly(ggp)
ggp2<-ggplotly(ggp)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
qplot(carat, price, data=dsamp, colour=clarity)
ggplotly()
qplot(carat, price, data=diamonds, colour=clarity)
ggplotly()
str(diamonds)
ggplot(a2, aes(dohod_rub,diler_name))+geom_point(size=0.1)+
facet_wrap(~contype_name, scale="free_x")
ggplotly()
ggplot(a2, aes(dohod_rub,diler_name))+geom_point(size=0.1)+
facet_wrap(~contype_name, scale="free_x")
ggplot(a2, aes(dohod_rub,diler_name))+geom_point(size=0.1)+
geom_rug()+
facet_wrap(~contype_name, scale="free_x")
ggplot(a2, aes(dohod_rub,diler_name))+geom_point(size=0.1)+
xlab("Доход, тыс.руб.")+
ylab("Брокер")+
facet_wrap(~contype_name, scale="free_x")
activity<-read.table("activity.csv", header=TRUE, sep=",", as.is=TRUE)
setwd("H:/R/hopkins/reproduc")
activity<-read.table("activity.csv", header=TRUE, sep=",", as.is=TRUE)
View(activity)
library("dplyr", lib.loc="~/R/win-library/3.1")
activity.wo.NA<-filter(activity, steps!="NA")
activity.wo.NA %>% group_by(date) %>% summarise(TotalSteps=sum(steps)) -> TotalSteps
View(TotalSteps)
activity.wo.NA %>% group_by(date,interval) %>%
summarise(TotalSteps=sum(steps))
-> TotalSteps
activity.wo.NA %>% group_by(date,interval) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps
View(TotalSteps)
View(activity.wo.NA)
activity.wo.NA %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps
ggplot(TotalSteps, aes(TotalSteps))+geom_hist()
library("ggplot2", lib.loc="~/R/win-library/3.1")
ggplot(TotalSteps, aes(TotalSteps))+geom_hist()
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
meanSteps<-mean(TotalSteps)
meanSteps<-mean(TotalSteps$TotalSteps)
medianSteps<-median(TotalSteps$TotalSteps)
activity.wo.NA %>% group_by(interval) %>%
summarise(MeanSteps=mean(steps))-> MeanSteps
View(MeanSteps)
activity.wo.NA %>% group_by(interval) %>%
summarise(MeanSteps=mean(steps))-> MeanSteps
ggplot(MeanSteps, aes(interval,MeanSteps))+geom_line()
View(TotalSteps)
which.max(activity.wo.NA)
which.max(activity.wo.NA$steps)
which.max(MeanSteps$MeanSteps)
MeanSteps[which.max(MeanSteps$MeanSteps),1]
MeanSteps[which.max(MeanSteps$MeanSteps),]$interval
is.NA(activity)
is.na(activity)
sum(is.na(activity))
summary(actiity)
summary(actiity)
summary(activity)
View(TotalSteps)
View(MeanSteps)
activity.join<-left_join(activity,MeanSteps)
View(activity.join)
activity.join[is.na(activity.join),1]<-activity.join$MeanSteps
View(activity.join)
activity.join[is.na(activity.join$steps),1]<-activity.join$MeanSteps
activity.join[is.na(activity.join$steps),1]<-activity.join[is.na(activity.join$steps),4]
View(activity.join)
activity.impute<-activity.join[,-4]
View(activity.impute)
activity.impute<-activity.join[,-4]
activity.impute %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps.impute
ggplot(TotalSteps.impute, aes(TotalSteps))+geom_histogram()
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
meanSteps<-mean(TotalSteps.impute$TotalSteps)
meanSteps
medianSteps<-median(TotalSteps.impute$TotalSteps)
medianSteps
meanSteps.orig<-mean(TotalSteps$TotalSteps)
meanSteps.orig
activity.wo.NA<-filter(activity, steps!="NA")
activity.wo.NA %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
meanSteps.orig<-mean(TotalSteps$TotalSteps)
meanSteps.orig
medianSteps.orig<-median(TotalSteps$TotalSteps)
medianSteps.orig
activity.impute %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps.impute
ggplot(TotalSteps.impute, aes(TotalSteps))+geom_histogram()
meanSteps.impute<-mean(TotalSteps.impute$TotalSteps)
meanSteps.impute
medianSteps.impute<-median(TotalSteps.impute$TotalSteps)
medianSteps.impute
meanSteps.orig
medianSteps.orig
meanSteps.impute<-mean(TotalSteps.impute$TotalSteps)
meanSteps.impute
medianSteps.impute<-median(TotalSteps.impute$TotalSteps)
medianSteps.impute
ggplot(MeanSteps, aes(interval,MeanSteps))+geom_line()
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
ggplot(TotalSteps.impute, aes(TotalSteps))+geom_histogram()
library("lubridate", lib.loc="~/R/win-library/3.1")
dweeks(Sys.Date())
Sys.Date
Sys.Date()
week(Sys.Date())
day(Sys.Date())
yday(Sys.Date())
mday(Sys.Date())
wday(Sys.Date())
?wday
weekdays(Sys.Date())
wday(Sys.Date())
wday(TotalSteps.impute[1,1])
wday(as.Date(TotalSteps.impute[1,1])
)
TotalSteps.impute$date<-as.Date(TotalSteps.impute$date)
wday<-TotalSteps.impute[1,1]
wday
wday(TotalSteps.impute[1,1])
wday(TotalSteps.impute$date)
?factor
TotalSteps.impute$wday<-wday(as.Date(TotalSteps.impute$date))-1
View(TotalSteps.impute)
TotalSteps.impute$wday<-wday(as.Date(TotalSteps.impute$date))
View(TotalSteps.impute)
View(TotalSteps.impute)
TotalSteps.impute$wday %in% c(1:7)
TotalSteps.impute$wday %in% c(2:6)
TotalSteps.impute$[TotalSteps.impute$wday %in% c(2:6),]$wday2<-"weekday"
TotalSteps.impute$[TotalSteps.impute$wday %in% c(2:6)]$wday2<-"weekday"
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6)]$wday2<-"weekday"
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),]$wday2<-"weekday"
TotalSteps.impute$wday %in% c(2:6)
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),]
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),]$wday2<-as.factor("weekday")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-as.factor("weekday")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),]$wer<-as.factor("weekday")
TotalSteps.impute[!is.na(TotalSteps.impure),4]<-as.factor("weekend")
TotalSteps.impute[!is.na(TotalSteps.impute),4]<-as.factor("weekend")
TotalSteps.impute
TotalSteps.impute[!is.na(TotalSteps.impute$V4),4]<-as.factor("weekend")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-c("weekday")
TotalSteps.impute[!is.na(TotalSteps.impute$V4),4]<-c("weekend")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-c("weekday")
TotalSteps.impute[is.na(TotalSteps.impute$V4),4]<-c("weekend")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-c("weekday")
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-as.character(c("weekday"))
TotalSteps.impute[TotalSteps.impute$wday %in% c(2:6),4]<-as.character(c("weekday"))
?factor
cut(TotalSteps.impute$V4, c(2:6,c(1,7)))
cut(TotalSteps.impute$wday, c(2:6,c(1,7)))
is.na(TotalSteps.impute$V4),4
is.na(TotalSteps.impute$V4)
factor(is.na(TotalSteps.impute$V4))
factor(is.na(TotalSteps.impute$V4), levels=c(FALSE, TRUE))
factor(is.na(TotalSteps.impute$V4), levels=c(FALSE, TRUE), label=c("weekday", "weekend"))
TotalSteps.impute$daywek<-factor(is.na(TotalSteps.impute$V4), levels=c(FALSE, TRUE), label=c("weekday", "weekend"))
activity.impute %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps.impute
TotalSteps.impute$date<-as.Date(TotalSteps.impute$date)
TotalSteps.impute$wday<-wday(as.Date(TotalSteps.impute$date))
TotalSteps.impute$daywek<-factor(TotalSteps.impute$wday, levels=c(2:6, c(1,7)), label=c("weekday", "weekend"))
TotalSteps.impute$daywek<-factor(TotalSteps.impute$wday, levels=c(2:6), label=c("weekday", "weekend"))
TotalSteps.impute$daywek<-factor(TotalSteps.impute$wday %in c(2:6),label=c("weekday", "weekend"))
(TotalSteps.impute$wday %in c(2:6)
TotalSteps.impute$daywek<-factor(TotalSteps.impute$wday %in% c(2:6),label=c("weekday", "weekend"))
View(TotalSteps.impute)
TotalSteps.impute$daywek<-factor(TotalSteps.impute$wday %in% c(2:6),label=c("weekend", "weekday"))
View(TotalSteps.impute)
TotalSteps.impute %>% group_by(interval) %>%
summarise(MeanSteps=mean(steps))-> MeanStepsDayWeek
activity.impute$date<-as.Date(activity.impute$date)
activity.impute$wday<-wday(as.Date(activity.impute$date))
activity.impute$daywek<-factor(activity.impute$wday %in% c(2:6),label=c("weekend", "weekday"))
activity.impute %>% group_by(interval) %>%
summarise(MeanSteps=mean(steps))-> MeanStepsDayWeek
View(MeanStepsDayWeek)
View(MeanStepsDayWeek)
View(MeanSteps)
activity.impute %>% group_by(interval, dayweek) %>%
summarise(MeanSteps=mean(steps))-> MeanStepsDayWeek
activity.impute$dayweek<-factor(activity.impute$wday %in% c(2:6),label=c("weekend", "weekday"))
activity.impute %>% group_by(interval, dayweek) %>%
summarise(MeanSteps=mean(steps))-> MeanStepsDayWeek
View(MeanStepsDayWeek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(.~dayweek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(dayweek~.)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(~.dayweek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(.~dayweek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line(color=dayweek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps,color=dayweek))+geom_line()
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(.~dayweek)
ggplot(MeanStepsDayWeek, aes(interval,MeanSteps))+geom_line()+facet_grid(dayweek~.)
library("dplyr", lib.loc="C:/Program Files/R/R-3.2.1/library")
activity<-read.table("activity.csv", header=TRUE, sep=",", as.is=TRUE)
activity.wo.NA<-filter(activity, steps!="NA")
activity.wo.NA %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.1/library")
activity.wo.NA<-filter(activity, steps!="NA")
activity.wo.NA<-dplyr::filter(activity, steps!="NA")
activity.wo.NA %>% group_by(date) %>%
summarise(TotalSteps=sum(steps))-> TotalSteps
ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
library("plyr", lib.loc="C:/Program Files/R/R-3.2.1/library")
dplyr::group_by(activity.wo.NA,date) %>%
p<-ggplot2::ggplot(TotalSteps, aes(TotalSteps))+geom_histogram()
